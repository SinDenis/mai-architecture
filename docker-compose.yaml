version: '3.3'

services:
  # first sharding
  db_node_01:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_01
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: social
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3360:6033
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_01 --database=social --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    volumes:
      - ./mariadb/main_script/main_script.sql:/docker-entrypoint-initdb.d/init.sql
      - db-node-01-data:/var/lib/mysql

  # second sharding
  db_node_02:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_02
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: social
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3361:6033
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_02 --database=social --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    volumes:
      - ./mariadb/main_script/main_script.sql:/docker-entrypoint-initdb.d/init.sql
      - db-node-02-data:/var/lib/mysql
  
  # sequence
  db_node_03:
    build:
      context: mariadb
      dockerfile: Dockerfile
    container_name: db_node_03
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: social
      MYSQL_USER: stud
      MYSQL_PASSWORD: stud
      MYSQL_ROOT_PASSWORD: '1'
    command: >
      --sql-mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'
      --general-log=ON
      --log-queries-not-using-indexes=ON
    networks:
      - arch-network
    ports:
      - 3362:6033
    healthcheck:
      test: "/usr/bin/mysql --host=db_node_03 --database=social --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    volumes:
      - ./mariadb/sequence/seq.sql:/docker-entrypoint-initdb.d/init.sql
      - db-node-03-data:/var/lib/mysql

  proxysql:
    build:
      context: proxysql
      dockerfile: Dockerfile
    container_name: proxysql
    # volumes:
    #   - proxysql-data:/var/lib/proxysql
    healthcheck:
      test: "/usr/bin/mysql -h 127.0.0.1 -P 6033 --user=stud --password=stud --execute \"SHOW DATABASES;\""
      timeout: 5s
      retries: 5
    depends_on:
      - db_node_01
      - db_node_02
      - db_node_03
    networks:
      - arch-network
    ports:
      # Mysql Client Port
      - "6033:6033"
      # Mysql Admin Port
      - "6032:6032"

  cache:
    image: redis:6.2-alpine
    container_name: cache
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - arch-network
    volumes:
      - cache:/data

  kafka1:
    image: 'bitnami/kafka:latest'
    container_name: kafka1
    ports:
     - "2181:2181"
     - "9092:9092"
     - "9093:9093"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g"
    volumes:
      - kafka_volume1:/bitnami/kafka
    networks:
      - arch-network

  kafka2:
    image: 'bitnami/kafka:latest'
    container_name: kafka2
    # ports:
    #   - "2181:2181"
    #   - "9092:9092"
    #   - "9093:9093"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka2:9092"
      KAFKA_BROKER_ID: 2
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_CLUSTER_ID: "dh6khitPSDGZSBOjNeTC_g"
    volumes:
      - kafka_volume2:/bitnami/kafka
    networks:
      - arch-network

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
      - "8888:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9092"
      KAFKA_CLUSTERS_0_NAME: "kraft"
    networks:
      - arch-network

  user_service:
    build:
      context: ./
      dockerfile: ./user-service/Dockerfile
    container_name: user_service
    environment:
      - DB_HOST=proxysql
      - DB_PORT=6033
      - DB_LOGIN=stud
      - DB_PASSWORD=stud
      - DB_DATABASE=social
      - CACHE=cache:6379
      - WEB_SERVER_PORT=8080
    ports:
      - "8080:8080"
    networks:
      - arch-network
    depends_on:
      cache:
        condition: service_started

volumes:
  db-node-01-data:
  db-node-02-data:
  db-node-03-data:
  proxysql-data:
  cache:
  kafka_volume1:
  kafka_volume2:

networks:
  arch-network:
    driver: "bridge"
    external: false